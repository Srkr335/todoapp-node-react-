{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst API_URL = 'http://localhost:5000/api/todos';\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await fetch(API_URL);\n  return response.json();\n});\nexport const addTodo = createAsyncThunk('todos/addTodo', async todo => {\n  const response = await fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(todo)\n  });\n  return response.json();\n});\nexport const deleteTodo = createAsyncThunk('todos/deleteTodo', async id => {\n  await fetch(`${API_URL}/${id}`, {\n    method: 'DELETE'\n  });\n  return id;\n});\nexport const updateTodo = createAsyncThunk('todos/updateTodo', async ({\n  id,\n  title\n}) => {\n  const response = await fetch(`${API_URL}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title\n    })\n  });\n  return response.json();\n});\nconst markAsCompleted = async (id, completed) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, {\n      completed: !completed\n    });\n    setItems(items.map(item => item._id === id ? response.data : item));\n  } catch (error) {\n    console.error(\"Error updating todo\", error);\n  }\n};\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.fulfilled, (state, action) => action.payload).addCase(addTodo.fulfilled, (state, action) => {\n      state.push(action.payload);\n    }).addCase(deleteTodo.fulfilled, (state, action) => {\n      return state.filter(todo => todo._id !== action.payload);\n    }).addCase(updateTodo.fulfilled, (state, action) => {\n      const index = state.findIndex(todo => todo._id === action.payload._id);\n      if (index !== -1) {\n        state[index] = action.payload;\n      }\n    });\n  }\n});\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_URL","fetchTodos","response","fetch","json","addTodo","todo","method","headers","body","JSON","stringify","deleteTodo","id","updateTodo","title","markAsCompleted","completed","axios","put","setItems","items","map","item","_id","data","error","console","todoSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","filter","index","findIndex","reducer"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/MERN/frontend/src/features/todoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst API_URL = 'http://localhost:5000/api/todos';\n\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await fetch(API_URL);\n  return response.json();\n});\n\nexport const addTodo = createAsyncThunk('todos/addTodo', async (todo) => {\n  const response = await fetch(API_URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(todo),\n  });\n  return response.json();\n});\n\nexport const deleteTodo = createAsyncThunk('todos/deleteTodo', async (id) => {\n  await fetch(`${API_URL}/${id}`, { method: 'DELETE' });\n  return id;\n});\n\nexport const updateTodo = createAsyncThunk('todos/updateTodo', async ({ id, title }) => {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title }),\n    });\n    return response.json();\n  });\n\n  const markAsCompleted = async (id, completed) => {\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, { completed: !completed });\n      setItems(items.map(item => (item._id === id ? response.data : item)));\n    } catch (error) {\n      console.error(\"Error updating todo\", error);\n    }\n  };\n\n\n  \n  const todoSlice = createSlice({\n    name: 'todos',\n    initialState: [],\n    reducers: {},\n    extraReducers: (builder) => {\n      builder\n        .addCase(fetchTodos.fulfilled, (state, action) => action.payload)\n        .addCase(addTodo.fulfilled, (state, action) => {\n          state.push(action.payload);\n        })\n        .addCase(deleteTodo.fulfilled, (state, action) => {\n          return state.filter((todo) => todo._id !== action.payload);\n        })\n        .addCase(updateTodo.fulfilled, (state, action) => {\n          const index = state.findIndex((todo) => todo._id === action.payload._id);\n          if (index !== -1) {\n            state[index] = action.payload;\n          }\n        });\n    },\n  });\n  \n  export default todoSlice.reducer;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}