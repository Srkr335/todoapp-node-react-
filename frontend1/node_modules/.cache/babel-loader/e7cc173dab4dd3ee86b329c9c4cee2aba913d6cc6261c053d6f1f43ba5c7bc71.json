{"ast":null,"code":"export const updateTodo = createAsyncThunk('todos/updateTodo', async ({\n  id,\n  title\n}) => {\n  const response = await fetch(`${API_URL}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title\n    })\n  });\n  return response.json();\n});\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.fulfilled, (state, action) => action.payload).addCase(addTodo.fulfilled, (state, action) => {\n      state.push(action.payload);\n    }).addCase(deleteTodo.fulfilled, (state, action) => {\n      return state.filter(todo => todo._id !== action.payload);\n    }).addCase(updateTodo.fulfilled, (state, action) => {\n      const index = state.findIndex(todo => todo._id === action.payload._id);\n      if (index !== -1) {\n        state[index] = action.payload;\n      }\n    });\n  }\n});\nexport default todoSlice.reducer;","map":{"version":3,"names":["updateTodo","createAsyncThunk","id","title","response","fetch","API_URL","method","headers","body","JSON","stringify","json","todoSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fetchTodos","fulfilled","state","action","payload","addTodo","push","deleteTodo","filter","todo","_id","index","findIndex","reducer"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/MERN/frontend/src/features/todoSlice.js"],"sourcesContent":["export const updateTodo = createAsyncThunk('todos/updateTodo', async ({ id, title }) => {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title }),\n    });\n    return response.json();\n  });\n  \n  const todoSlice = createSlice({\n    name: 'todos',\n    initialState: [],\n    reducers: {},\n    extraReducers: (builder) => {\n      builder\n        .addCase(fetchTodos.fulfilled, (state, action) => action.payload)\n        .addCase(addTodo.fulfilled, (state, action) => {\n          state.push(action.payload);\n        })\n        .addCase(deleteTodo.fulfilled, (state, action) => {\n          return state.filter((todo) => todo._id !== action.payload);\n        })\n        .addCase(updateTodo.fulfilled, (state, action) => {\n          const index = state.findIndex((todo) => todo._id === action.payload._id);\n          if (index !== -1) {\n            state[index] = action.payload;\n          }\n        });\n    },\n  });\n  \n  export default todoSlice.reducer;\n  "],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAGC,gBAAgB,CAAC,kBAAkB,EAAE,OAAO;EAAEC,EAAE;EAAEC;AAAM,CAAC,KAAK;EACpF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,IAAIJ,EAAE,EAAE,EAAE;IAC/CK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER;IAAM,CAAC;EAChC,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACQ,IAAI,CAAC,CAAC;AACxB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGC,WAAW,CAAC;EAC5BC,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACC,UAAU,CAACC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACC,OAAO,CAAC,CAChEL,OAAO,CAACM,OAAO,CAACJ,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACI,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC,CACDL,OAAO,CAACQ,UAAU,CAACN,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,OAAOD,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKP,MAAM,CAACC,OAAO,CAAC;IAC5D,CAAC,CAAC,CACDL,OAAO,CAACpB,UAAU,CAACsB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,MAAMQ,KAAK,GAAGT,KAAK,CAACU,SAAS,CAAEH,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKP,MAAM,CAACC,OAAO,CAACM,GAAG,CAAC;MACxE,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBT,KAAK,CAACS,KAAK,CAAC,GAAGR,MAAM,CAACC,OAAO;MAC/B;IACF,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}